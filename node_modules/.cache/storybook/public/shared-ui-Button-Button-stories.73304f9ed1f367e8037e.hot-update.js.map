{"version":3,"file":"shared-ui-Button-Button-stories.73304f9ed1f367e8037e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAaA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AATA","sources":["webpack://production-project/./src/shared/lib/classNames/classNames.ts","webpack://production-project/./src/shared/ui/Button/Button.tsx"],"sourcesContent":["type Mods = Record<string, boolean | string>\n\nexport function classNames(cls: string, mods: Mods = {}, additional: string[] = []): string {\n    return [\n        cls,\n        ...additional.filter(Boolean),\n        ...Object.entries(mods)\n            .filter(([className, value]) => Boolean(value))\n            .map(([className]) => className),\n    ]\n        .join(' ');\n}","import { classNames } from \"../../lib/classNames/classNames\";\nimport cls from './Button.module.scss'\nimport { ButtonHTMLAttributes, FC } from \"react\";\nimport React from \"react\";\n\n\nexport enum ThemeButton {\n    CLEAR = 'clear',\n    OUTLINE = 'outline'\n}\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    className?: string;\n    theme?: ThemeButton;\n}\n\n\n\n\nexport const Button: FC<ButtonProps> = (props) => {\n\n    const {className, children, theme, ...otherProps} = props\n\n    return(\n\t<button className={classNames(cls.Button, {[cls[theme]]:true}, [className])} {...otherProps}>\n        {children}\n\t</button>\n        )\n}"],"names":[],"sourceRoot":""}